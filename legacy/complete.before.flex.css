:root {
    --sb-theme-color: #1715ab;
    --sb-error-color: rgb(200, 50, 50);
    --sb-label-color: #747474;
    --sb-input-color: #000;
    --sb-background: white;
    --sb-border-radius: 6px;
}
     
@keyframes error {
    0% { transform: scale(.95); }
    50% { transform: scale(1.10); }
    100% { transform: scale(.95); }
}


/* ==============
form in general
=============== */

.sb-form,
.sb-form * {
    box-sizing: border-box;
    line-height: 1.5;
}



/* ==============
general input
=============== */

/* ==============
general input > container
=============== */

.sb-form .input {
    position: relative;

    width: 100%;

    padding: 5px 0 0 5px;
    
    border-bottom: var(--sb-border-style, solid) var(--sb-border-color, var(--sb-theme-color)) var(--sb-border-width, 2px);
    


    margin: 0 0 var(--margin, 30px) 0;

    display: flex;
        flex-direction: row;
        align-items: stretch;
        flex-wrap: wrap;

    box-shadow: var(--sb-shadow, 0px 0px 5px 2px var(--sb-shadow-color, #d3d3d3));
    
    border-radius: var(--sb-border-radius);

    overflow: hidden;

    background: var(--sb-background);

}





/* ==============
general input > input fields
=============== */

.sb-form .input :first-child {
    order: 1;
}

.sb-form .input :is(
    select,
    input:not(.btn),
    textarea
) {
    width: 20px;
    transition: font-weight .25s, padding .7s;
    border: none;
    background: none;
    flex-grow: 1;
    min-height: 2.5rem;
    font-size: 1.05rem;
    color: var(--sb-input-color);
    cursor: pointer;
    padding-left: .5em;
}


.sb-form .input :is(
    select,
    input:not(:placeholder-shown),
    textarea:not(:placeholder-shown)
) {
    padding-top: .8rem;
}


.sb-form .input ::placeholder {
    color: var(--sb-label-color);
    transition: font-weight .25s, color .5s, opacity .7s;
    font-size: 1.2rem;
    opacity: 1;
}



/* ==============
general input > general elements
=============== */

.sb-form .input > * {
    border-radius: var(--sb-border-radius);
    margin: 0 5px 5px 0;
    order: 0;
}

.sb-form .input > label ~ * {
    order: 2;
}

/* ==============
general input > labels
=============== */

.sb-form .input label {
    transition: font-weight 0.25s, opacity 0.3s ease-in, color 0.5s, left 0.7s;
    color: var(--sb-label-color);
    font-size: .9rem;
    padding: 0 1em;
    background: var(--sb-background);
}   

.sb-form .input :where(
    [type="radio"] ~ label:not([for]),
    textarea ~ label,
    select ~ label,
    input:not(
        [type="checkbox"],
        [type="radio"],
        [type="button"],
        [type="submit"]
    ) ~ label 
) {
    position: absolute;
    left: var(
        --sb-label-left,
        20%
    );
    top: 0;
}


.sb-form .input :is(
    input:not(
        [placeholder], 
        [type="radio"], 
        [type="checkbox"], 
        [type="file"],
        [type="range"],
        [type="button"],
        [type="submit"],
        [type="reset"],
        [type="color"]
    ),
    textarea:not([placeholder]),
    input:placeholder-shown,
    textarea:placeholder-shown
) ~ label { 
    opacity: 0; 
    left: calc(var(
        --sb-label-left,
        20%
    ) - 20px); 
}

.sb-form .input[aria-errormessage] > label:not( [type="radio"] ~ label[for] ),
.sb-form .input :is(
    textarea:invalid ~ label,  
    input[placeholder]:invalid ~ label 
) { color: var(--sb-error-color); }  



.sb-form .input :is(
    textarea,
    select,
    input 
):focus ~ label { font-weight: bold; }



.sb-form .input :is(
    input[required] ~ label:not([type="radio"] ~ label[for]),
    textarea[required] ~ label
)::after { content: ' *'; }  





/* ==============
general input > messages
=============== */

.sb-form .input :is(
    [role="alert"],
    [role="note"] 
) {
    display: flex;
    align-items: flex-start;
    transition: opacity .5s, font-weight .25s, line-height .5s;
    width: 100%;
    order: 3;
}


.sb-form .input :is(
    [role="alert"],
    [role="note"] 
)::before {
    padding-right: .3em;
    font-size: 1.3rem;
    margin-top: -.15em;
}


.sb-form .input [role="alert"] {
    color: var(--sb-error-color);
}

.sb-form .input :is(
    input:not(
        [type="submit"],
        [type="reset"],
        [type="button"]
    ),
    textarea,
    select
):focus ~ [role="alert"] {
    font-weight: bold;
}

.sb-form .input [role="alert"]::before {
    content: '\24D8';
}



.sb-form .input [role="note"] {
    color: var(--sb-label-color);
}   

.sb-form .input [role="note"]::before {
    color: var(--sb-label-color);
    content: '\24D8';
}   




/* ==============
general input > icon
=============== */

.sb-form .input > i {
    color: var(--sb-theme-color);
    font-size: 1.4rem;
    min-width: 40px;
    text-align: center;
    align-self: center;
}


.sb-form .input[aria-errormessage] > i,
.sb-form .input :invalid:not(:placeholder-shown) ~ i {
    animation: error 1s linear 0s infinite forwards normal;
}   



/* ==============
general input > button
=============== */

/* .sb-form .input > button {
    order: 2;
} */


.sb-form .input > :is(
    [type="button"],
    [type="submit"],
    [type="reset"],
    button
):not(.btn) {
    border: none;
    transition: color .5s, border .5s, background .5s;
    padding: .375rem .75rem;
    outline-offset: 2px;
    flex-grow: unset;
    width: unset;
    
    /* normal state */

    color: var(
        --sb-btn-color,
        var(--sb-background)
    );

    background: var(
        --sb-btn-background,
        var(--sb-theme-color)
    );

}   


.sb-form .input > :is(
    [type="button"],
    [type="reset"],
    [type="submit"],
    button
):not(.btn):is(:hover, :focus) {
    /* hover / focus state */

    color: var(
        --sb-btn-hover-color, 
        var(
            --sb-btn-color,
            var(--sb-background)
        )
    );

    background: var(
        --sb-btn-hover-background, 
        var(
            --sb-btn-background,
            var(--sb-theme-color)
        )
    );

}   

/* ==============
general input > outline button
=============== */

.sb-form .input > *:not(.btn).outline {
    border: var(
        --sb-btn-background,
        var(--sb-theme-color)
    ) solid 1px;
    
    background: none;
    color: var(
        --sb-btn-color,
        var(
            --sb-btn-background,
            var(--sb-theme-color)
        )
    );
}

.sb-form .input > *:not(.btn).outline:hover {
    
    --sb-btn-border-width:
    --sb-btn-hover-border-width:

    border-color: transparent;

    background: var(
        --sb-btn-hover-background,
        var(
            --sb-btn-background,
            var(--sb-theme-color)
        )
    );
    color: var( 
        --sb-btn-hover-color 
        --sb-btn-background 
    )
}






/* ==============
input password button
=============== */

.sb-form .input ::-ms-reveal { display: none; }

.sb-form .input > button.reveal {
    min-width: 45px;
    height: 40px;
    position: relative;
}

.sb-form .input > button.reveal:empty:after {
    content: "\1F441";
    font-size: 1.5rem;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -55%);
}

.sb-form .input [type="text"] ~ button.reveal:empty::after {
    content: "\00D7";
}




/* ==============
input textarea
=============== */

.sb-form .input textarea {
    min-height: 150px;
    resize: vertical;
}

.sb-form .input textarea:not(:placeholder-shown) {
    padding-top: 1em;
}

.sb-form .input textarea ~ i {
    margin-top: .1em;
    align-self: flex-start;
}

.sb-form .input textarea ~ .count {
    width: 100%;
    text-align: right;
    color: var(--sb-label-color);
}



/* ==============
input checkbox / radio
=============== */

.sb-form .input input:is(
    [type="checkbox"],
    [type="radio"]
) {
    width: 40px;
    min-height: 1em;
    height: 1em;
    align-self: center;
    order: unset;
    flex: 0;
}

.sb-form .input :is(
    [type="checkbox"],
    [type="radio"]
) ~ * {
    width: initial;
    order: unset;
    align-self: center;
}

.sb-form .input :is(
    [type="checkbox"],
    [type="radio"]
) ~ label {

}




/* ==============
input select
=============== */





/* ==============
input file
=============== */

.sb-form .input input[type="file"] {
    padding-top: .8em;
}

.sb-form .input ::file-selector-button {
    display: none;
}


/* ==============
input range
=============== */

.sb-form .input input[type="range"] {
    margin: .8rem 5px 0;
    padding: 0;
    min-height: 1em;
}



/* ==============
input color
=============== */

.sb-form .input input[type="color"] {
    padding: 0;
    min-height: 2.5rem;
}


/* ==============
input color inner color thing
=============== */

.sb-form .input ::-moz-color-swatch  {
    border-radius: calc(var(--sb-border-radius) - 3px);
    border: none;
}

.sb-form .input ::-webkit-color-swatch {
    border-radius: calc(var(--sb-border-radius) - 3px);
    border: none;
}

.sb-form .input ::-webkit-color-swatch-wrapper { 
    padding: 0;
}



.sb-form .input [type="color"] ~ label {
    opacity: 1;
}

.sb-form .input [type="color"] ~ i {
    top: 0;
    position: absolute;
    filter: drop-shadow(0 0 1px var(--sb-label-color)) 
            drop-shadow(0 0 1px var(--sb-label-color));
    color: var(--sb-background);
    margin: 10px;
}


.sb-form .input [type="color"] ~ label + i {
    right: 0;
}