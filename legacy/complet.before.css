:root {
    --sb-theme-color: #4e7e22;
    --sb-error-color: rgb(200, 50, 50);
    --sb-label-color: #535353;
    --sb-background: white;


    /* --sb-border-radius: 6px; */
    --sb-border-radius: 0px;
    --sb-shadow: 1px 1px 5px 2px lightgrey;

}
     
@keyframes error {
    0% { transform: scale(0.95); }
    50% { transform: scale(1.10); }
    100% { transform: scale(0.95); }
}

/* ==============
form in general
=============== */

.sb-form,
.sb-form * {
    box-sizing: border-box;
}



/* ==============
general input
=============== */

/* ==============
general input > container
=============== */

.sb-form .input {
    position: relative;

    width: 100%;
    padding: 5px 0px 3px 0px;
    border-bottom: var(--sb-theme-color) solid 2px;
    margin-bottom: 30px;

    display: flex;
        flex-direction: row;
        align-items: center;
        flex-wrap: wrap;

    background-color: var(--sb-background);
    box-shadow: var(--sb-shadow);
    
    transition: border-color 0.5s, margin 0.5s;
    border-radius: var(--sb-border-radius);
}



/* ==============
general input > input fields
=============== */

.sb-form .input select,
.sb-form .input input,
.sb-form .input textarea {
    border: none;
    flex-grow: 1;
    min-height: 35px;
    outline: none;
    font-size: 1.05rem;
    margin: 0px 10px;
    background: none;
}

.sb-form .input input::placeholder,
.sb-form .input textarea::placeholder {
    color: var(--sb-label-color);
}

.sb-form .input select:focus,
.sb-form .input input:focus,
.sb-form .input input:focus::placeholder,
.sb-form .input textarea:focus::placeholder {
    font-weight: bolder;
    transition: font-weight 0.25s;
}

.sb-form .input[aria-errormessage] input::placeholder,
.sb-form .input[aria-errormessage] textarea::placeholder {
    color: var(--sb-error-color);
}

/* ==============
general input > labels
=============== */

.sb-form .input label {
    transition: font-weight 0.25s, opacity 0.5s, color 0.5s;
    color: var(--sb-label-color);
    font-size: 0.9rem;

    position: absolute;
    top: 0;
    left: 60px;
    transform: translateY(-50%);
    filter: drop-shadow(0px 0px 2px var(--sb-background))
            drop-shadow(0px 0px 2px var(--sb-background));
}   

.sb-form .input input:not(
    [placeholder], 
    [type="radio"], 
    [type="checkbox"], 
    [type="file"],
    [type="range"]
) ~ label,
.sb-form .input textarea:not([placeholder]) ~ label,
.sb-form .input input:placeholder-shown ~ label,
.sb-form .input textarea:placeholder-shown ~ label { opacity: 0; }

.sb-form .input[aria-errormessage] > label:not(
    [type="radio"] ~ label[for]
),
.sb-form .input textarea:invalid ~ label,  
.sb-form .input input[placeholder]:invalid ~ label { color: var(--sb-error-color); }  

.sb-form .input select:focus ~ label,
.sb-form .input textarea:focus ~ label,
.sb-form .input input:focus ~ label { font-weight: bold; }

.sb-form .input input[type="radio"][required] ~ label:not([for])::after,
.sb-form .input textarea[required] ~ label::after,
.sb-form .input input[required]:not([type="radio"]) ~ label::after { content: ' *'; }  



/* ==============
general input > messages
=============== */

.sb-form .input::after,
.sb-form .input::before {
    opacity: 0;
    transition: opacity 0.5s, font-weight 0.25s, line-height 0.5s;
    content: ' ';
    line-height: 0px;
}

.sb-form .input[aria-errormessage]::after,
.sb-form .input[aria-details]::before {
    width: 100%;
    font-size: 0.9rem;
    order: 1;
    padding: 0px 10px;
    margin: 5px 0px;
    opacity: 1;
    align-self: flex-start;
    line-height: 20px;
    white-space: pre;
}   



/* ==============
general input > messages > error
=============== */

.sb-form .input[aria-errormessage]::after {
    color: var(--sb-error-color);
    content: '\2022  ' attr(aria-errormessage);
}   

.sb-form .input:focus-within[aria-errormessage]::after { font-weight: bold; }



/* ==============
general input > messages > details
=============== */

.sb-form .input[aria-details]::before {
    content: '\2022  ' attr(aria-details);
}   




/* ==============
general input > icon
=============== */

.sb-form .input > i {
    color: var(--sb-theme-color);
    font-size: 1.4rem;
    min-width: 40px;
    text-align: center;
}

.sb-form .input select + i,
.sb-form .input textarea + i,
.sb-form .input input:not(
    [type="radio"]
) + i {
    order: -1;
    margin-right: -10px;
}

.sb-form .input textarea:not(:valid) ~ i,
.sb-form .input[aria-errormessage] > i,
.sb-form .input input:not(:valid) ~ i {
    animation: error 1s linear 0s infinite forwards normal;
}   


/* ==============
general input > button
=============== */

.sb-form .input > button:not(.btn) {
    background: none;
    border: none;
    color: rgb(120, 120, 120);
    padding: 5px;
    cursor: pointer;
}   

.sb-form .input > button:last-child {
    margin-right: 5px;
}

.sb-form .input > button i { color: inherit; }



/* ==============
input password
=============== */

.sb-form .input input::-ms-reveal { display: none; }

.sb-form .input input ~ button.reveal {
    min-width: 32px;
}

.sb-form .input input ~ button.reveal::before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block; 
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    line-height: 1;
    font-family: "Font Awesome 5 Pro", "Font Awesome 5 Free";
    font-weight: 900;
    font-size: 1.1rem;
    color: inherit;
    content: "\f070";
}

.sb-form .input input[type="text"] ~ button.reveal::before {
    content: "\f06e";
}



/* ==============
input textarea
=============== */

.sb-form .input textarea {
    margin: 5px 10px 0px 10px;
    min-height: 150px;
    resize: vertical;
}

.sb-form .input textarea ~ i {
    margin-top: 8px;
    align-self: flex-start;
}

.sb-form .input textarea ~ span {
    width: 100%;
    text-align: right;
    padding: 0px 10px;
    margin-top: 3px;
}



/* ==============
input checkbox / radio
=============== */

.sb-form .input input[type="radio"],
.sb-form .input input[type="checkbox"] {
    flex-grow: 0;
    width: 40px;
    margin: 0 0 0 2px;
    min-height: 15px;
    cursor: pointer;
}

.sb-form .input input[type="radio"] ~ label[for],
.sb-form .input input[type="checkbox"] ~ label {
    flex-grow: 1;
    position: static;
    font-size: 1.05rem;
    transform: none;
    margin: 5px 0px;
    color: black;
    overflow-wrap: anywhere;
    cursor: pointer;

}



/* ==============
input radio
=============== */

.sb-form .input input[type="radio"] + i {
    position: relative;
    left: -38px;
    background: var(--sb-background);
    transition: color 0.3s;
}

.sb-form .input input[type="radio"]:focus + label + i,
.sb-form .input input[type="radio"]:focus + i {
    outline: auto var(--sb-theme-color);
    padding: 3px 0;
}

.sb-form .input input[type="radio"]:not(:checked) + i {
    color: var(--sb-label-color);
}

.sb-form .input input[type="radio"] ~ label[for] {
    font-weight: normal;
    flex-grow: 1;
    padding-left: 5px;
    z-index: 1;
}

.sb-form .input input[type="radio"] + i + label[for] {
    width: calc(100% - 82px);
    position: relative;
    left: -40px;
}

.sb-form .input input[type="radio"] + i + label[for]::before {
    content: ' ';
    position: absolute;
    inset: 0 100% 0 -40px;
}

.sb-form .input input[type="radio"] + label[for] {
    width: calc(100% - 82px);
}

.sb-form .input input[type="radio"] + label[for]::after {
    content: ' ';
    position: absolute;
    inset: 0 -40px 0 100%;
}

.sb-form .input input[type="radio"]:checked + i + label[for],
.sb-form .input input[type="radio"]:checked + label[for] { color: var(--sb-theme-color); }

.sb-form .input input[type="radio"]:focus + i + label[for],
.sb-form .input input[type="radio"]:focus + label[for] { font-weight: bold; }



/* ==============
input select
=============== */

.sb-form .input select {
    height: 10px;
    cursor: pointer;
}

/* ==============
input file
=============== */

.sb-form .input input[type="file"] {
    line-height: 35px;
    cursor: pointer;
}

.sb-form .input input[type="file"]::file-selector-button {
    display: none;
}


/* ==============
input range
=============== */

.sb-form .input input[type="range"] {
    cursor: pointer;
}




/* ==============
input color
=============== */

.sb-form .input input[type="color"] {
    padding: 0;
    margin: -6px 7px -4px 10px;
    border-bottom: 100%;
}

.sb-form .input input[type="color"] ~ label {
    top: 50%;
    color: black;
    filter: none;
    padding: 3px;
}

.sb-form .input input[type="color"] ~ label::before {
    content: '';
    background: var(--sb-background);
    opacity: 0.5;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -1;
    top: 0;
    left: 0;
}
/* 
.sb-form .input input[type="range"]::after {
    content: attr(max);
    visibility: visible;
    display: block;
    background: red;
}

input[type="range"]::before { 
    content: attr(min);
    visibility: visible;
    display: block;
    background: red;
} */
