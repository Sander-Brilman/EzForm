/* 
[== base styles: container_item_core.css ==]
*/



.input-box :where(label) {
    /* needed to allow the tag (span) to be position absolute in case of a floating label  */
    position: relative;

    /* display flex + flex-grow for making the label fill the remaining space in the container */
    display: flex;
        flex-grow: 999999;
}

/* 
    input, textarea, select are all styles the same.
*/

.input-box label :where(
    input, 
    textarea, 
    select
) {

    /* flex-grow fro growing the input to the same size as the label it is nested in */
    flex-grow: 1;

    /* standard properties */
    padding: var(--input-padding);
    background: var(--input-background);
    color: var(--input-color);
    border-radius: var(--input-border-radius, inherit);
    font-size: var(--input-font-size);

    border-left: var(--input-border-left, var(--input-border));
    border-right: var(--input-border-right, var(--input-border));
    border-top: var(--input-border-top, var(--input-border));
    border-bottom: var(--input-border-bottom, var(--input-border));

}


/* 
valid state for input
*/

.input-box :where(label :is(
    input, 
    textarea, 
    select
):valid) {
    background: var(--input-valid-background);
    color: var(--input-valid-color);
}

/* 
readonly state for input
*/

.input-box :where(label :is(
    input, 
    textarea, 
    select
):read-only) 
{
    cursor: not-allowed;

    background: var(--input-readonly-background, var(--input-background));
    color: var(--input-readonly-color, var(--input-color));

    border-left: var(--input-readonly-border-left, var(--input-readonly-border, var(--input-border-left, var(--input-border))));
    border-right: var(--input-readonly-border-right, var(--input-readonly-border, var(--input-border-right, var(--input-border))));
    border-top: var(--input-readonly-border-top, var(--input-readonly-border, var(--input-border-top, var(--input-border))));
    border-bottom: var(--input-readonly-border-bottom, var(--input-readonly-border, var(--input-border-bottom, var(--input-border))));

}

/* 
required state for input
*/

.input-box :where(label :is(
    input, 
    textarea, 
    select
):required) {
    background: var(--input-required-background);
    color: var(--input-required-color);
}


/* 
invalid state for input
*/

.input-box :where(label :is(
    input, 
    textarea, 
    select
):invalid) 
{
    background: var(--input-invalid-background);
    color: var(--input-invalid-color);
}


/* 
valid state for input
*/

.input-box :where(label :is(
    input, 
    textarea, 
    select
):valid) 
{
    background: var(--input-valid-background);
    color: var(--input-valid-color);
}

