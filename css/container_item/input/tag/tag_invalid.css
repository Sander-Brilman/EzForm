/* 
[== base styles: tag_core.css ==]


complicated selectors explained:

the input will be counted as invalid if it is required and not yet filled-in
however we want the invalid styles only to show up after a value has been filled in

as long as it has not been filled in we want the required style to be shown (as long as it is marked as such ofcourse)
to detect if any value has been entered a placeholder of any value is needed.

the selector below selects all tags if it repective input meets these conditions:

- it is invalid (either due being blank or other validation contrainsts)
    - if it is marked as required it needs a placeholder, and that placeholder must not be shown (AKA a value is filled in)
    - if it is not required


this means when using a input is marked as required 

*/



.input-box :where(label:has(
    :is(
        input,
        select,
        textarea
    ):invalid:is(:required[placeholder]:not(:placeholder-shown),:not(:required))
) > span) {

    background: var(--tag-invalid-background, var(--tag-background));
    color: var(--tag-invalid-color, var(--tag-color, var(--global-label-color)));

    border-left: var(--tag-invalid-border-left, var(--tag-invalid-border, var(--tag-border-left, var(--tag-border))));
    border-right: var(--tag-invalid-border-right, var(--tag-invalid-border, var(--tag-border-right, var(--tag-border))));
    border-top: var(--tag-invalid-border-top, var(--tag-invalid-border, var(--tag-border-top, var(--tag-border))));
    border-bottom: var(--tag-invalid-border-bottom, var(--tag-invalid-border, var(--tag-border-bottom, var(--tag-border))));
}

/* 
tag suffix for when the input is required
*/
.input-box :where(label:has(
    :is(
        input,
        select,
        textarea
    ):invalid:is([placeholder]:required:not(:placeholder-shown),:not(:required))
) > span)::after {

    color: var(--tag-invalid-suffix-color);
    content: var(--tag-invalid-suffix);

}